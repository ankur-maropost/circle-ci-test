version: 2
jobs:
  build_and_test:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Run tests
          command: npm test
      - store_test_results:
          path: test-results
  deploy_to_staging:
    docker:
      - image: google/cloud-sdk
    environment:
      - PROJECT_NAME: "Maropost Testing"
      - GOOGLE_PROJECT_ID: "maropost1984"
      - GOOGLE_COMPUTE_ZONE: "us-central1-a"
      - GOOGLE_CLUSTER_NAME: "circle-ci-test"
      - REPO_NAME: "circle-ci-test"
    steps:
      - checkout
      - run: 
          name: Setup Google Cloud SDK
          command: |
            apt-get install -qq -y gettext
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - setup_remote_docker
      - run: 
          name: Docker build and push
          command: |
            docker build \
              --build-arg COMMIT_REF=${CIRCLE_SHA1} \
              --build-arg BUILD_DATE=`date -u +”%Y-%m-%dT%H:%M:%SZ”` \
              -t ${REPO_NAME} .
            docker tag ${REPO_NAME} gcr.io/${GOOGLE_PROJECT_ID}/${REPO_NAME}:${CIRCLE_SHA1}
            gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://gcr.io
            docker push gcr.io/${GOOGLE_PROJECT_ID}/${REPO_NAME}:${CIRCLE_SHA1}
      - run: 
          name: Deploy to Kubernetes
          command: |
            envsubst < ${HOME}/project/k8s.yml > ${HOME}/patched_k8s.yml
            kubectl apply -f ${HOME}/patched_k8s.yml
            kubectl rollout status deployment/${REPO_NAME}
  execute_ansible_playbook:
    docker:
      - image: google/cloud-sdk
    environment:
      - PROJECT_NAME: "Maropost Testing"
      - GOOGLE_PROJECT_ID: "maropost1984"
      - GOOGLE_COMPUTE_ZONE: "us-central1-a"
    steps:
      - run:
          name: Setup Google Cloud SDK
          command: |
            apt-get install -qq -y gettext
            echo $GCLOUD_SERVICE_KEY_COMPUTE > ${HOME}/gcloud-service-key.json
            # PUBLIC_IP=$(gcloud compute instances describe ankur-test-ansible-master --project ${GOOGLE_PROJECT_ID} --zone ${GOOGLE_COMPUTE_ZONE} | grep natIP | awk -F : '{ print $2 }') 
            # export GOOGLE_APPLICATION_CREDENTIALS="${HOME}/gcloud-service-key.json"
            apt-get install python python-pip -y
            pip install --upgrade google-api-python-client
            pip install requests
            curl -O https://raw.githubusercontent.com/GoogleCloudPlatform/python-docs-samples/master/compute/oslogin/service_account_ssh.py
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            PUBLIC_IP=$(gcloud compute instances describe ankur-test-ansible-master --project ${GOOGLE_PROJECT_ID} --zone ${GOOGLE_COMPUTE_ZONE} | grep natIP | awk -F : '{ print $2 }')
            #gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            #gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      - setup_remote_docker
      - run:
          name: Run ansible playbook
          command: |
            echo ${PUBLIC_IP}
            export GOOGLE_APPLICATION_CREDENTIALS="${HOME}/gcloud-service-key.json"
            python service_account_ssh.py \
            --cmd 'sudo -u ankur.sharma ansible-playbook /etc/ansible/playbooks/test.yml --extra-vars "target_nodes=sandbox_test"' \
            --account circle-ci-ansible-test@maropost1984.iam.gserviceaccount.com \
            --project maropost1984 --hostname "35.184.192.202"
            #gcloud --quiet compute ssh  circle-ci-ansible-test@ankur-test-ansible-master --command='ansible-playbook /etc/ansible/test.yml --extra-vars "target_nodes=sandbox_test"' #--ssh-key-file=${HOME}/gcloud-service-key.json
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build_and_test
      - deploy_to_staging:
          requires:
            - build_and_test
          filters:
            branches:
              only: master
      - execute_ansible_playbook
